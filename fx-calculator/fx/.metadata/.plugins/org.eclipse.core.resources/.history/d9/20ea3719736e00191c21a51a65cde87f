package com.anz.fx.calculator;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.anz.fx.calculator.config.FxConfig;
import com.fasterxml.jackson.databind.exc.InvalidFormatException;

public class ExcelReader {
	public static final String SAMPLE_XLSX_FILE_PATH = "D:\\Personal\\ANZ\\config\\Currency_Matrix.xls";

	@Autowired
	private FxConfig config;
	static String [][] array;


	public static void main(String ar[]) throws IOException, InvalidFormatException, EncryptedDocumentException,
			org.apache.poi.openxml4j.exceptions.InvalidFormatException {

		Workbook workbook = WorkbookFactory.create(new File(SAMPLE_XLSX_FILE_PATH));

		Sheet sheet = workbook.getSheetAt(0);
		Map<String,Integer> map = new HashMap<>();
		 Map<String,Double> currencyMap = new HashMap<>();

		// Create a DataFormatter to format and get each cell's value as String
		DataFormatter dataFormatter = new DataFormatter();
		
		Row row1 = sheet.getRow(0);
		String currVal = null;
		for(int cellIndex=0;cellIndex<=row1.getLastCellNum();cellIndex++) {
			if(row1.getCell(cellIndex)!=null) {
				currVal = row1.getCell(cellIndex).getStringCellValue();
				map.put(currVal.trim(),cellIndex);
			}
		}
		
		int rowNum = sheet.getLastRowNum()+1;
		int colNum = sheet.getRow(0).getLastCellNum();
		
		array= new String[rowNum][colNum];
	String arrVal = null;
		for(int rowIndex=0;rowIndex<rowNum;rowIndex++) {
			for(int colIndex=0;colIndex < colNum;colIndex++) {
				if(sheet.getRow(rowIndex)!=null
						&& sheet.getRow(rowIndex).getCell(colIndex)!=null) {
					arrVal = sheet.getRow(rowIndex).getCell(colIndex).getStringCellValue();
					array[rowIndex][colIndex] = arrVal !=null ? arrVal.trim() : null;
				}
				
			}
		}
		
		
		for(int rowIndex=0;rowIndex<rowNum;rowIndex++) {
			for(int colIndex=0;colIndex < colNum;colIndex++) {
				System.out.print(array[rowIndex][colIndex]+"\t");
			}
			System.out.println();
		}
		
		for(Map.Entry<String, Integer> entry : map.entrySet()) {
			System.out.println(entry.getKey() + "-" +entry.getValue());
		}
		
		currencyMap.put("AUDUSD", 0.8371);
		currencyMap.put("USDJPY", 119.95);
		
		String base = "AUD";
		String term = "JPY";
		
		List<String> valueList = new ArrayList<>();
		valueList.add("1:1");
		valueList.add("D");
		valueList.add("Inv");
		double val=1;
		double calculatedVal=0;
		int i = map.get(base);
		int j = map.get(term);
		if( !valueList.contains(array[i][j])) {
			 calculatedVal = process(base,array[i][j],val,map,currencyMap);
			 calculatedVal = process(array[i][j],term, calculatedVal,map,currencyMap);
			
		} else {
			calculatedVal = process(base,array[i][j],val,map,currencyMap);
		}
		System.out.println(calculatedVal);
		
		
		
		
		

		// Closing the workbook
		workbook.close();
	}
	
	static double process(String base, String term, Double value, Map<String,Integer> map, Map<String,Double> currencyMap) {
		String selIndex = array[map.get(base)][map.get(term)];
		Double rate= currencyMap.get(base+term);
		if(rate==null) {
			rate = currencyMap.get(term+base);
		}
		double result=0;
		switch(selIndex) {
		case "D" :
			result =  value*rate;
			break;
			
		case "1:1" :
			result =  value;
			break;
		
		case "Inv" :
			result =  value/rate;
			break;
			
		}
		return result;
	}
	
	
}